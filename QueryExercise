-------------------------------------------------------------------
-- WARM UPS: Type the following commands to build muscle memory. --
-------------------------------------------------------------------
-- 1. [Inner Join]: SELECT *
--                  FROM users AS u
--                  JOIN purchases AS p
--                  ON p.user_id=u.id;
SELECT *
FROM users AS u
JOIN purchases AS p
ON p.user_id=u.user_id;

-- 2. [Left Join]: SELECT *
--                 FROM users AS u
--                 LEFT JOIN purchases AS p
--                 ON p.user_id=u.id;
SELECT *
FROM users AS u
LEFT JOIN purchases AS p
ON p.user_id=u.user_id;

-- 3. [Finding NULLS]: SELECT *
--                     FROM users AS u
--                     WHERE details IS NULL;
SELECT * 
FROM users AS u
WHERE u.email IS NULL;

--------------------------------------------------------
-- EXERCISES: Answer using the techniques from above. --
--------------------------------------------------------
-- 1. First, join the products table to the purchase_items
--    table. Choose a join that will KEEP products even
--    if they don't have any associated purchase_items.
SELECT *
FROM products as pr
LEFT JOIN purchase_items as pu
ON pr.product_id = pu.product_id;

-- 2. Were there any products with no purchase?
--    Query the joined table for rows with NULL quantity.
SELECT * 
FROM products AS p 
LEFT JOIN purchase_items AS pi 
ON p.product_id=pi.product_id where quantity IS NULL;

-- 3. Now add a groupby to find the average quantity that
--    each product was purchased in.
SELECT title, avg(quantity) 
FROM products AS p 
LEFT JOIN purchase_items AS pi 
ON p.product_id=pi.product_id group by title;

-- 4. Let's find the total number of items associated with each
--    user.
-- a. First, join the purchases and purchase_items table,
--    so we have both user_id and quantity.
--    Which kind of join is appropriate here?
-- b. Now use a group by to find the total quantity for each
--    user_id.
SELECT user_id, SUM(quantity)
FROM purchases AS p
RIGHT JOIN purchase_items AS pi
ON p.purchase_id = pi.purchase_id
GROUP BY user_id
ORDER BY user_id;
